var z= 2.5;
var emirateTower = {
//front
    vertices: [
        /*0,
        0,
        2.5,

        1,
        0,
        2,

        0,
        2,
        2.5,


        0,
        2,
        2.5,

        1,
        2,
        2,

        1,
        0,
        2,

        0,
        0,
        1.5,

        1,
        0,
        2,

        0,
        2,
        1.5,

        0,
        2,
        1.5,

        1,
        0,
        2,

        1,
        2,
        2,

        0,
        0,
        1.5,

        0,
        2,
        2.5,

        0,
        0,
        2.5,


        0,
        0,
        z-1,

        0,
        2,
        z-1,

        0,
        2,
        z,

        0,
        2,
        z,

        1,
        2,
        2,

        2,
        2.7,
        2,

        0,
        2,
        z-1,

        1,
        2,
        2,

        1,
        2.7,
        2,

        0,
        2,
        z-1,

        0,
        2,
        z,

        1,
        2.7,
        2,*/

        -1.0, -1.0, 1.0,
            1.0, -1.0, 1.0,
            1.0, 1.0, 1.0,
            -1.0, 1.0, 1.0,

            // Back face
            -1.0, -1.0, -1.0,
            -1.0, 1.0, -1.0,
            1.0, 1.0, -1.0,
            1.0, -1.0, -1.0,

            // Top face
            -1.0, 1.0, -1.0,
            -1.0, 1.0, 1.0,
            1.0, 1.0, 1.0,
            1.0, 1.0, -1.0,

            // Bottom face
            -1.0, -1.0, -1.0,
            1.0, -1.0, -1.0,
            1.0, -1.0, 1.0,
            -1.0, -1.0, 1.0,

            // Right face
            1.0, -1.0, -1.0,
            1.0, 1.0, -1.0,
            1.0, 1.0, 1.0,
            1.0, -1.0, 1.0,

            // Left face
            -1.0, -1.0, -1.0,
            -1.0, -1.0, 1.0,
            -1.0, 1.0, 1.0,
            -1.0, 1.0, -1.0,

    ],

    indices:[0, 1, 2, 0, 2, 3,    // front
        4, 5, 6, 4, 6, 7,    // back
        8, 9, 10, 8, 10, 11,   // top
        12, 13, 14, 12, 14, 15,   // bottom
        16, 17, 18, 16, 18, 19,   // right
        20, 21, 22, 20, 22, 23,],
    //[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,28,29,30,31,32,33,34,35,36],
    normals:  [0.0, 0.0, 1.0,
        0.0, 0.0, 1.0,
        0.0, 0.0, 1.0,
        0.0, 0.0, 1.0,

        // Back
        0.0, 0.0, -1.0,
        0.0, 0.0, -1.0,
        0.0, 0.0, -1.0,
        0.0, 0.0, -1.0,

        // Top
        0.0, 1.0, 0.0,
        0.0, 1.0, 0.0,
        0.0, 1.0, 0.0,
        0.0, 1.0, 0.0,

        // Bottom
        0.0, -1.0, 0.0,
        0.0, -1.0, 0.0,
        0.0, -1.0, 0.0,
        0.0, -1.0, 0.0,

        // Right
        1.0, 0.0, 0.0,
        1.0, 0.0, 0.0,
        1.0, 0.0, 0.0,
        1.0, 0.0, 0.0,

        // Left
        -1.0, 0.0, 0.0,
        -1.0, 0.0, 0.0,
        -1.0, 0.0, 0.0,
        -1.0, 0.0, 0.0],
    texCoords: [
        0.0,0.5859375,    0.5,0.5844960,    0.5,1.0,   0.0,1.0,
        // 0.0, 0.40429,   0.50054, 0.40429,   0.5016,0.0 ,   0.0, 0.0,

        // Back
        0.0, 0.0,   1.0, 0.0,   1.0, 1.0,   0.0, 1.0,
        // Top
        0.0, 0.0,   1.0, 0.0,   1.0, 1.0,   0.0, 1.0,
        // Bottom
        0.0, 0.0,   1.0, 0.0,   1.0, 1.0,   0.0, 1.0,
        // Right
        0.5, 0.5844960,   1.0, 0.5859375,   1.0, 1.0,   0.5, 1.0,

        // Left
        0.5, 0.5844960,   1.0, 0.5859375,   1.0, 1.0,   0.5, 1.0,
    ]


};
function mag(vec) {
    return Math.sqrt(Math.pow(vec[0], 2)+Math.pow(vec[1], 2)+Math.pow(vec[2], 2))
}
function normalize(normal) {
    var returnVal = [];
    var m = mag(normal);
    for (var i = 0; i < normal.length; i++) {
        if (m > 0) {
            returnVal.push(normal[i] / m);
        }
    }
    return returnVal;
}
function computeNormals(triangle){
    //console.log(triangle);

    var U = []; //triangle[1] - triangle[0];
    var V = [];//triangle[2] - triangle[0];
    for(var i =0; i< 3; i++){
        U.push(triangle[1][i] - triangle[0][i]);
        V.push(triangle[2][i] - triangle[0][i]);
    }

   // console.log('U array ',U);
    //console.log('V array ',V);

    var Normal = [
        (U[1]*V[2]) - (U[2]*V[1]),
        (U[2]*V[0]) - (U[0]*V[2]),
        (U[0]*V[1]) - (U[1] * V[0]),
    ];
    var returnNormal = normalize(Normal);
    console.log('normalsBeing Produced ', returnNormal);
    return returnNormal;
}